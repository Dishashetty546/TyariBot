===============================
         API Points - CHECK LIST
===============================

======== AUTHENTICATION ========

1. REGISTER - POST
   Endpoint: http://localhost:7000/api/auth/register
   Body (JSON):
   {
     "_id": "6869e9224a16bb233d7b8fbf",
     "name": "Your Name",
     "email": "your@email.com",
     "profileImageUrl": "https://example.com/image.jpg",
     "token": "<JWT_TOKEN>"
   }

2. LOGIN - POST
   Endpoint: http://localhost:7000/api/auth/login
   Body (JSON):
   {
     "email": "test@example.com",
     "password": "testpassword"
   }

3. Get All Profiles - GET
   Endpoint: http://localhost:7000/api/auth/profile

4. Upload Profile Image - POST
   Endpoint: http://localhost:7000/api/auth/update-image
   Steps:
   - Go to Body tab → form-data
   - Key: image → Type: File
   - Choose image file from local system

======== SESSIONS ========

5. CREATE SESSION - POST
   Endpoint: http://localhost:7000/api/sessions/create
   Headers:
     Authorization: Bearer <TOKEN>
   Body (JSON):
   {
     "role": "Frontend Developer",
     "experience": "2 years",
     "topicsToFocus": "React, JavaScript",
     "description": "Practice for frontend interview",
     "questions": [
       { "question": "What is React?", "answer": "A JS library for building UIs" },
       { "question": "Explain useState.", "answer": "A React hook for state." }
     ]
   }

6. GET USER SESSIONS - GET
   Endpoint: http://localhost:7000/api/sessions/my-sessions
   Headers:
     Authorization: Bearer <TOKEN>

7. GET SESSION BY ID - GET
   Endpoint: http://localhost:7000/api/sessions/<sessionId>
   Headers:
     Authorization: Bearer <TOKEN>

8. GET SPECIFIC SESSION - GET
   Endpoint: http://localhost:7000/api/sessions/686a1f566476040e772a74b5
   Token:
     eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

======== QUESTIONS ========

9. ADD QUESTIONS - POST
   Endpoint: http://localhost:7000/api/questions/add
   Headers:
     Content-Type: application/json
     Authorization: Bearer <TOKEN>
   Body (JSON):
   {
     "sessionId": "686a55f8482629c20f80b2e0",
     "question": [
       {
         "question": "What is Node.js?",
         "answer": "Node.js is a JavaScript runtime built on Chrome's V8 engine."
       },
       {
         "question": "What is Express.js?",
         "answer": "Express.js is a web framework for Node.js."
       }
     ]
   }

10. PIN QUESTION - POST
    Endpoint: http://localhost:7000/api/questions/686b3e822ad92e9c6732710e/pin
    Headers:
      Content-Type: application/json
      Authorization: Bearer <TOKEN>
    Body (JSON):
    {
      "questionId": "686b3e822ad92e9c6732710e"
    }

11. ADD NOTE TO QUESTION - POST
    Endpoint: http://localhost:7000/api/questions/686b3e822ad92e9c6732710e/note
    Headers:
      Content-Type: application/json
      Authorization: Bearer <TOKEN>
    Body (JSON):
    {
      "questionId": "686b3e822ad92e9c6732710e",
      "note": "This is important for interviews."
    }

======== AI INTEGRATION ========

12. GENERATE AI QUESTIONS - POST
    Endpoint: http://localhost:7000/api/ai/generate-questions
    Headers:
      Authorization: Bearer <TOKEN>
    Body (JSON):
    {
      "role": "Frontend Developer",
      "experience": 2,
      "topicsToFocus": "React, JavaScript, CSS",
      "numberOfQuestions": 3
    }

13. GENERATE AI EXPLANATION - POST
    Endpoint: http://localhost:7000/api/ai/generate-explanation
    Headers:
      Authorization: Bearer <TOKEN>
    Body (JSON):
    {
      "question": "What is the virtual DOM in React?"
    }

======== DEPLOYED LINKS ========
Backend: https://tyaribot.onrender.com  
Frontend: https://tyari-bot.vercel.app
